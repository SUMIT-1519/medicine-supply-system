// require('dotenv').config()
// const nodemailer = require('nodemailer');
// const Mailgen = require('mailgen')

// exports.sendMail = (req, res) => {

//   // Create a transporter object using SMTP transport
//   const transporter = nodemailer.createTransport({
//     service: 'gmail',
//     auth: {
//       user: process.env.MAIL_ID, // Replace with your Gmail email address
//       pass: process.env.PASS // Replace with your Gmail email password
//     }
//   });

//   // Define the email options
//   const mailOptions = {
//     from: 'developmentmailvarad@gmail.com', // Replace with your Gmail email address
//     to: `${req.body.email}`, // Replace with recipient email address
//     subject: 'Prescription Generated', // Replace with subject of your email
//     html: `<h4>Hello</h4><p>Your patients medical prescription is generated by hospital please check that at :<a href='http://localhost:5000/consent/${req.body._id}'>Click Here</a></p><h4>Thank You !!</h4>`,// Replace with the body of your email
//   };


//   // Send the email
//   transporter.sendMail(mailOptions, (error, info) => {
//     if (error) {
//       res.status(400).json({ 'Error': error });
//     } else {
//       res.status(200).json({ 'Email sent successfully': info.response });
//     }
//   });


// }

// exports.sendDeliveryMail = (req, res) => {

//   // Create a transporter object using SMTP transport
//   const transporter = nodemailer.createTransport({
//     service: 'gmail',
//     auth: {
//       user: process.env.MAIL_ID, // Replace with your Gmail email address
//       pass: process.env.PASS // Replace with your Gmail email password
//     }
//   });

//   // Define the email options
//   const mailOptions = {
//     from: 'developmentmailvarad@gmail.com', // Replace with your Gmail email address
//     to: `${req.body.email}`, // Replace with recipient email address
//     subject: 'Medicines Delivered', // Replace with subject of your email
//     html: `<h4>Hello</h4><p>Your patients medicines are delivered !!! </p><h4>Thank You !!</h4>`,// Replace with the body of your email
//   };


//   // Send the email
//   transporter.sendMail(mailOptions, (error, info) => {
//     if (error) {
//       res.status(400).json({ 'Error': error });
//     } else {
//       res.status(200).json({ 'Email sent successfully': info.response });
//     }
//   });
// }

// exports.sendNotAvail = (req, res) => {

//   // Create a transporter object using SMTP transport
//   const transporter = nodemailer.createTransport({
//     service: 'gmail',
//     auth: {
//       user: process.env.MAIL_ID, // Replace with your Gmail email address
//       pass: process.env.PASS // Replace with your Gmail email password
//     }
//   });

//   // Define the email options
//   const mailOptions = {
//     from: 'developmentmailvarad@gmail.com', // Replace with your Gmail email address
//     to: `${req.body.email}`, // Replace with recipient email address
//     subject: 'Prescription Generated', // Replace with subject of your email
//     html: `<h4>Hello</h4><p>Your patients medical prescription is generated by hospital please check that at :<a href='http://localhost:3000/consent/${req.body._id}'>Click Here</a><br>But your medicines are not available at hospital's medical store please take screenshot of prescription and click on "NO"</p><h4>Thank You !!</h4>`,// Replace with the body of your email
//   };


//   // Send the email
//   transporter.sendMail(mailOptions, (error, info) => {
//     if (error) {
//       res.status(400).json({ 'Error': error });
//     } else {
//       res.status(200).json({ 'Email sent successfully': info.response });
//     }
//   });


// }
const MedicalOwner = require('../model/medicalOwner'); 
const Medicine = require('../model/medicalSchema');
const Prescription=require('../model/precription.model');
const Doctor = require('../model/doctor'); // Assuming there's a Doctor model to fetch hospital address
const axios = require('axios'); // You can use Axios to call the Geocoding API
const nodemailer = require('nodemailer');
const PDFDocument = require('pdfkit');
const fs = require('fs');
const path = require('path');

// Define your transporter to send the email
const transporter = nodemailer.createTransport({
  service: 'gmail', 
  auth: {
    user: process.env.MAIL_ID, 
    pass: process.env.PASS 
  }
});

exports.sendPrescriptionEmail = async (req, res) => {
  try {
    const { email, availability, pdfPath ,prescriptionId} = req.body;

    // Call your function to send the email with the PDF attachment
    await sendAvailabilityEmail(email, availability, pdfPath,prescriptionId);

    return res.status(200).json({ message: 'Email sent successfully' });

  } catch (err) {
    return res.status(400).json({ error: err.message });
  }
};
async function sendAvailabilityEmail(patientEmail, availability, pdfPath,prescriptionId) {
  let emailContent = `<h2>Medicine Availability</h2><p>Here is the list of available medical stores for your prescription:</p>`;
  
  availability.forEach(medItem => {
    emailContent += `<h3>Medicine: ${medItem.medicine}</h3><ul>`;
    medItem.stores.forEach(store => {
      emailContent += `<li>${store.storeName} - ${store.storeAddress} (Distance: ${(store.distance / 1000).toFixed(2)} km)</li>`;
    });
    emailContent += `</ul>`;
  });
  emailContent += `
      </ul>
      <p>You can also pre-book your medicines by clicking the link below:</p>
      <p><a href="http://localhost:3000/prebook/${prescriptionId}">Pre-book Medicines</a></p>
    `;

  // Prepare the mail options
  const mailOptions = {
    from: process.env.MAIL_ID, 
    to: patientEmail, 
    subject: 'Medicine Availability Information and Prescription',
    html: emailContent, 
    attachments: [
      {
        filename: 'prescription.pdf', // File name for the attachment
        path: pdfPath, // Path to the generated PDF
        contentType: 'application/pdf'
      }
    ]
  };

  // Send the email
  try {
    await transporter.sendMail(mailOptions);
    console.log(`Email sent to ${patientEmail}`);
  } catch (err) {
    console.error('Error sending email:', err.message);
  }
}